{"version":3,"file":"editor.directive.js","sourceRoot":"","sources":["../../.tmp/editor/editor.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, Output, forwardRef } from '@angular/core';\n\nimport FroalaEditor from 'froala-editor';\n\n@Directive({\n  selector: '[froalaEditor]',\n  exportAs: 'froalaEditor',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting:\n      forwardRef(() => FroalaEditorDirective),\n    multi: true\n  }]\n})\nexport class FroalaEditorDirective implements ControlValueAccessor {\n\n  // editor options\n  private _opts: any = {\n    immediateAngularModelUpdate: false,\n    angularIgnoreAttrs: null\n  };\n\n  private _element: any;\n\n  private SPECIAL_TAGS: string[] = ['img', 'button', 'input', 'a'];\n  private INNER_HTML_ATTR: string = 'innerHTML';\n  private _hasSpecialTag: boolean = false;\n\n  // editor element\n  private _editor: any;\n\n  // initial editor content\n  private _model: string;\n\n  private _editorInitialized: boolean = false;\n\n  private _oldModel: string = null;\n\n  constructor(el: ElementRef, private zone: NgZone) {\n\n    let element: any = el.nativeElement;\n\n    // check if the element is a special tag\n    if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) != -1) {\n      this._hasSpecialTag = true;\n    }\n    this._element = element;\n\n    this.zone = zone;\n  }\n\n  // Begin ControlValueAccesor methods.\n  onChange = (_) => { };\n  onTouched = () => { };\n\n  // Form model content changed.\n  writeValue(content: any): void {\n    this.updateEditor(content);\n  }\n\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n  registerOnTouched(fn: () => void): void { this.onTouched = fn; }\n  // End ControlValueAccesor methods.\n\n  // froalaEditor directive as input: store the editor options\n  @Input() set froalaEditor(opts: any) {\n    this._opts = this.clone(  opts || this._opts);\n    this._opts =  {...this._opts};\n  }\n\n   // TODO: replace clone method with better possible alternate \n  private clone(item) {\n  \tconst me = this;  \n      if (!item) { return item; } // null, undefined values check\n\n      let types = [ Number, String, Boolean ], \n          result;\n\n      // normalizing primitives if someone did new String('aaa'), or new Number('444');\n      types.forEach(function(type) {\n          if (item instanceof type) {\n              result = type( item );\n          }\n      });\n\n      if (typeof result == \"undefined\") {\n          if (Object.prototype.toString.call( item ) === \"[object Array]\") {\n              result = [];\n              item.forEach(function(child, index, array) { \n                  result[index] = me.clone( child );\n              });\n          } else if (typeof item == \"object\") {\n              // testing that this is DOM\n              if (item.nodeType && typeof item.cloneNode == \"function\") {\n                  result = item.cloneNode( true );    \n              } else if (!item.prototype) { // check that this is a literal\n                  if (item instanceof Date) {\n                      result = new Date(item);\n                  } else {\n                      // it is an object literal\n                      result = {};\n                      for (var i in item) {\n                          result[i] = me.clone( item[i] );\n                      }\n                  }\n              } else {\n                  if (false && item.constructor) {\n                      result = new item.constructor();\n                  } else {\n                      result = item;\n                  }\n              }\n          } else {\n              result = item;\n          }\n      }\n      return result;\n  }\n  // froalaModel directive as input: store initial editor content\n  @Input() set froalaModel(content: any) {\n    this.updateEditor(content);\n  }\n\n  // Update editor with model contents.\n  private updateEditor(content: any) {\n    if (JSON.stringify(this._oldModel) == JSON.stringify(content)) {\n      return;\n    }\n\n    if (!this._hasSpecialTag) {\n      this._oldModel = content;\n    }\n    else {\n      this._model = content;\n    }\n\n    if (this._editorInitialized) {\n      if (!this._hasSpecialTag) {\n        this._editor.html.set(content);\n      }\n      else {\n        this.setContent();\n      }\n    }\n    else {\n      if (!this._hasSpecialTag) {\n        this._element.innerHTML = content || '';\n      }\n      else {\n        this.setContent();\n      }\n    }\n  }\n\n  // froalaModel directive as output: update model if editor contentChanged\n  @Output() froalaModelChange: EventEmitter<any> = new EventEmitter<any>();\n\n  // froalaInit directive as output: send manual editor initialization\n  @Output() froalaInit: EventEmitter<Object> = new EventEmitter<Object>();\n\n  // update model if editor contentChanged\n  private updateModel() {\n    this.zone.run(() => {\n\n      let modelContent: any = null;\n\n      if (this._hasSpecialTag) {\n\n        let attributeNodes = this._element.attributes;\n        let attrs = {};\n\n        for (let i = 0; i < attributeNodes.length; i++) {\n\n          let attrName = attributeNodes[i].name;\n          if (this._opts.angularIgnoreAttrs && this._opts.angularIgnoreAttrs.indexOf(attrName) != -1) {\n            continue;\n          }\n\n          attrs[attrName] = attributeNodes[i].value;\n        }\n\n        if (this._element.innerHTML) {\n          attrs[this.INNER_HTML_ATTR] = this._element.innerHTML;\n        }\n\n        modelContent = attrs;\n      } else {\n\n        let returnedHtml: any = this._editor.html.get();\n        if (typeof returnedHtml === 'string') {\n          modelContent = returnedHtml;\n        }\n      }\n      if (this._oldModel !== modelContent) {\n        this._oldModel = modelContent;\n\n        // Update froalaModel.\n        this.froalaModelChange.emit(modelContent);\n\n        // Update form model.\n        this.onChange(modelContent);\n      }\n\n    })\n  }\n\n  private registerEvent(eventName, callback) {\n\n    if (!eventName || !callback) {\n      return;\n    }\n\n    if (!this._opts.events) {\n      this._opts.events = {};\n    }\n\n    this._opts.events[eventName] = callback;\n  }\n\n  private initListeners() {\n    let self = this;\n    // Check if we have events on the editor.\n    if (this._editor.events) {\n      // bind contentChange and keyup event to froalaModel\n      this._editor.events.on('contentChanged', function () {\n        self.updateModel();\n      });\n      this._editor.events.on('mousedown', function () {\n        setTimeout(function () {\n          self.onTouched();\n        }, 0);\n      });\n\n      if (this._opts.immediateAngularModelUpdate) {\n        this._editor.events.on('keyup', function () {\n          setTimeout(function () {\n            self.updateModel();\n          }, 0);\n        });\n      }\n    }\n\n    this._editorInitialized = true;\n  }\n\n  private createEditor() {\n    if (this._editorInitialized) {\n      return;\n    }\n\n    this.setContent(true);\n\n    // init editor\n    this.zone.runOutsideAngular(() => {\n      // Add listeners on initialized event.\n      if (!this._opts.events) this._opts.events = {}\n\n      // Register initialized event.\n      this.registerEvent('initialized', this._opts.events && this._opts.events.initialized);\n      const existingInitCallback = this._opts.events.initialized;\n      // Default initialized event.\n      if (!this._opts.events.initialized || !this._opts.events.initialized.overridden) {\n        this._opts.events.initialized = () => {\n          this.initListeners();\n          existingInitCallback && existingInitCallback.call(this._editor, this);\n        };\n        this._opts.events.initialized.overridden = true;\n      }\n\n      // Initialize the Froala Editor.\n      this._editor = new FroalaEditor(\n        this._element,\n        this._opts\n      );\n    });\n  }\n\n  private setHtml() {\n    this._editor.html.set(this._model || \"\");\n\n    // This will reset the undo stack everytime the model changes externally. Can we fix this?\n    this._editor.undo.reset();\n    this._editor.undo.saveStep();\n  }\n\n  private setContent(firstTime = false) {\n    let self = this;\n\n    // Set initial content\n    if (this._model || this._model == '') {\n      this._oldModel = this._model;\n      if (this._hasSpecialTag) {\n\n        let tags: Object = this._model;\n\n        // add tags on element\n        if (tags) {\n\n          for (let attr in tags) {\n            if (tags.hasOwnProperty(attr) && attr != this.INNER_HTML_ATTR) {\n              this._element.setAttribute(attr, tags[attr]);\n            }\n          }\n\n          if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n            this._element.innerHTML = tags[this.INNER_HTML_ATTR];\n          }\n        }\n      } else {\n        if (firstTime) {\n          this.registerEvent('initialized', function () {\n            self.setHtml();\n          });\n        } else {\n          self.setHtml();\n        }\n      }\n    }\n  }\n\n  private destroyEditor() {\n    if (this._editorInitialized) {\n      this._editor.destroy();\n      this._editorInitialized = false;\n    }\n  }\n\n  private getEditor() {\n    if (this._element) {\n      return this._editor;\n    }\n\n    return null;\n  }\n\n  // send manual editor initialization\n  private generateManualController() {\n    let controls = {\n      initialize: this.createEditor.bind(this),\n      destroy: this.destroyEditor.bind(this),\n      getEditor: this.getEditor.bind(this),\n    };\n    this.froalaInit.emit(controls);\n  }\n\n  // TODO not sure if ngOnInit is executed after @inputs\n  ngAfterViewInit() {\n    // check if output froalaInit is present. Maybe observers is private and should not be used?? TODO how to better test that an output directive is present.\n    if (!this.froalaInit.observers.length) {\n      this.createEditor();\n    } else {\n      this.generateManualController();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyEditor();\n  }\n}\n"]}