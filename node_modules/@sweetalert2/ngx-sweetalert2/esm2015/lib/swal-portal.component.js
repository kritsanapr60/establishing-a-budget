import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
/**
 * @internal
 * Holds a consumer's Angular template and displays it on a Sweet Alert.
 * See SwalPortalDirective for info about the covered feature.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function SwalPortalComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
export class SwalPortalComponent {
    constructor() {
        this.template = null;
    }
}
SwalPortalComponent.ɵfac = function SwalPortalComponent_Factory(t) { return new (t || SwalPortalComponent)(); };
SwalPortalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwalPortalComponent, selectors: [["swal-portal"]], inputs: { template: "template" }, decls: 1, vars: 1, consts: [[4, "ngTemplateOutlet"]], template: function SwalPortalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SwalPortalComponent_ng_container_0_Template, 1, 0, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });
SwalPortalComponent.propDecorators = {
    template: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SwalPortalComponent, [{
        type: Component,
        args: [{
                selector: 'swal-portal',
                template: '<ng-container *ngTemplateOutlet="template"></ng-container>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { template: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhbC1wb3J0YWwuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy9uZ3gtc3dlZXRhbGVydDIvc3JjL2xpYi9zd2FsLXBvcnRhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFFdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7Ozs7O0FBTUgsTUFBTSxPQUFPLG1CQUFtQjtBQUNoQyxJQU5BO0FBQ0csUUFNUSxhQUFRLEdBQTRCLElBQUksQ0FBQztBQUNwRCxJQUFBLENBQUM7QUFDRDsrQ0FUQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLGFBQWE7V0FDdkIsUUFBUSxFQUFFLDREQUE0RCxrQkFDdEUsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sY0FDbEQ7Ozs7d0ZBQ0k7QUFBQztBQUNJLHVCQUFMLEtBQUs7QUFDVDs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQGludGVybmFsXG4gKiBIb2xkcyBhIGNvbnN1bWVyJ3MgQW5ndWxhciB0ZW1wbGF0ZSBhbmQgZGlzcGxheXMgaXQgb24gYSBTd2VldCBBbGVydC5cbiAqIFNlZSBTd2FsUG9ydGFsRGlyZWN0aXZlIGZvciBpbmZvIGFib3V0IHRoZSBjb3ZlcmVkIGZlYXR1cmUuXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnc3dhbC1wb3J0YWwnLFxuICAgIHRlbXBsYXRlOiAnPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cInRlbXBsYXRlXCI+PC9uZy1jb250YWluZXI+JyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBTd2FsUG9ydGFsQ29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PiB8IG51bGwgPSBudWxsO1xufVxuIl19