{"version":3,"file":"ng-validate-equal.js","sources":["ng-validate-equal/lib/ng-validate-equal.directive.ts","ng-validate-equal/lib/ng-validate-equal.module.ts","ng-validate-equal/public-api.ts","ng-validate-equal/ng-validate-equal.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, forwardRef, Attribute, OnDestroy } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[ngValidateEqual]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => ValidateEqualDirective), multi: true }\r\n    ]\r\n})\r\nexport class ValidateEqualDirective implements Validator, OnDestroy {\r\n\r\n    private valueChangesSub: Subscription;\r\n\r\n    constructor(@Attribute('ngValidateEqual') public otherControl: string) {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.valueChangesSub) {\r\n            this.valueChangesSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    validate(selfControl: AbstractControl): { [key: string]: any } {\r\n\r\n        const selfControlValue = selfControl.value;\r\n        const otherControl = selfControl.root.get(this.otherControl);\r\n\r\n        if (this.valueChangesSub) {\r\n            this.valueChangesSub.unsubscribe();\r\n        }\r\n\r\n        // this code works when user types in other control putting the error in self control\r\n        this.valueChangesSub = otherControl.valueChanges.subscribe(\r\n            otherControlValue => {\r\n                if (!this.isEqual(selfControlValue, otherControlValue) && (selfControl.touched || selfControl.dirty)) {\r\n                    selfControl.setErrors(\r\n                        {\r\n                            notEqual: true\r\n                        }\r\n                    );\r\n                } else {\r\n                    if (selfControl.hasError('notEqual')) {\r\n                        delete selfControl.errors['notEqual'];\r\n                        if (!Object.keys(selfControl.errors).length) { selfControl.setErrors(null); }\r\n                    }\r\n                }\r\n            }\r\n        );\r\n\r\n        // this code works when the user types in self control putting the error in self control\r\n        if (!this.isEqual(selfControlValue, otherControl.value) && (selfControl.touched || selfControl.dirty)) {\r\n            return {\r\n                notEqual: true\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private isEqual(val1, val2) {\r\n        val1 = this.unifyEmptyStrings(val1);\r\n        val2 = this.unifyEmptyStrings(val2);\r\n\r\n        return val1 === val2;\r\n    }\r\n\r\n    private unifyEmptyStrings(val) {\r\n        const isDefined = this.isDefined;\r\n        if (val === null || !isDefined(val)) {\r\n            val = '';\r\n        }\r\n        return val;\r\n    }\r\n\r\n    private isDefined(value) {\r\n        const defaultUndefined = void (0);\r\n        return value !== defaultUndefined;\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { ValidateEqualDirective } from './ng-validate-equal.directive';\n\n\n\n@NgModule({\n  declarations: [ValidateEqualDirective],\n  imports: [],\n  exports: [ValidateEqualDirective]\n})\nexport class ValidateEqualModule { }\n","/*\n * Public API Surface of ng-validate-equal\n */\n\nexport * from './lib/ng-validate-equal.directive';\nexport * from './lib/ng-validate-equal.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}