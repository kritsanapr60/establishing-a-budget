{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/getsubnodes\n */\n\n/* globals EventTarget, Event */\nexport default function getSubNodes(head) {\n  var excludedProperties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n  var nodes = [head]; // @if CK_DEBUG_WATCHDOG // const prevNodeMap = new Map();\n  // Nodes are stored to prevent infinite looping.\n\n  var subNodes = new Set();\n\n  while (nodes.length > 0) {\n    var node = nodes.shift();\n\n    if (subNodes.has(node) || shouldNodeBeSkipped(node) || excludedProperties.has(node)) {\n      continue;\n    }\n\n    subNodes.add(node); // Handle arrays, maps, sets, custom collections that implements `[ Symbol.iterator ]()`, etc.\n\n    if (node[Symbol.iterator]) {\n      // The custom editor iterators might cause some problems if the editor is crashed.\n      try {\n        var _iterator = _createForOfIteratorHelper(node),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var n = _step.value;\n            nodes.push(n); // @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( n ) ) {\n            // @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( n, node );\n            // @if CK_DEBUG_WATCHDOG // }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } catch (err) {// Do not log errors for broken structures\n        // since we are in the error handling process already.\n        // eslint-disable-line no-empty\n      }\n    } else {\n      for (var key in node) {\n        // We share a reference via the protobuf library within the editors,\n        // hence the shared value should be skipped. Although, it's not a perfect\n        // solution since new places like that might occur in the future.\n        if (key === 'defaultValue') {\n          continue;\n        }\n\n        nodes.push(node[key]); // @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( node[ key ] ) ) {\n        // @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( node[ key ], node );\n        // @if CK_DEBUG_WATCHDOG // }\n      }\n    }\n  } // @if CK_DEBUG_WATCHDOG // return { subNodes, prevNodeMap };\n\n\n  return subNodes;\n}\n\nfunction shouldNodeBeSkipped(node) {\n  var type = Object.prototype.toString.call(node);\n  var typeOfNode = typeof node;\n  return typeOfNode === 'number' || typeOfNode === 'boolean' || typeOfNode === 'string' || typeOfNode === 'symbol' || typeOfNode === 'function' || type === '[object Date]' || type === '[object RegExp]' || type === '[object Module]' || node === undefined || node === null || // Skip native DOM objects, e.g. Window, nodes, events, etc.\n  node instanceof EventTarget || node instanceof Event;\n}","map":{"version":3,"sources":["/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@ckeditor/ckeditor5-watchdog/src/utils/getsubnodes.js"],"names":["getSubNodes","head","excludedProperties","Set","nodes","subNodes","length","node","shift","has","shouldNodeBeSkipped","add","Symbol","iterator","n","push","err","key","type","Object","prototype","toString","call","typeOfNode","undefined","EventTarget","Event"],"mappings":";;AAAA;;;;;AAKA;;;;AAIA;AAEA,eAAe,SAASA,WAAT,CAAsBC,IAAtB,EAA6D;AAAA,MAAjCC,kBAAiC,uEAAZ,IAAIC,GAAJ,EAAY;AAC3E,MAAMC,KAAK,GAAG,CAAEH,IAAF,CAAd,CAD2E,CAG3E;AAEA;;AACA,MAAMI,QAAQ,GAAG,IAAIF,GAAJ,EAAjB;;AAEA,SAAQC,KAAK,CAACE,MAAN,GAAe,CAAvB,EAA2B;AAC1B,QAAMC,IAAI,GAAGH,KAAK,CAACI,KAAN,EAAb;;AAEA,QAAKH,QAAQ,CAACI,GAAT,CAAcF,IAAd,KAAwBG,mBAAmB,CAAEH,IAAF,CAA3C,IAAuDL,kBAAkB,CAACO,GAAnB,CAAwBF,IAAxB,CAA5D,EAA6F;AAC5F;AACA;;AAEDF,IAAAA,QAAQ,CAACM,GAAT,CAAcJ,IAAd,EAP0B,CAS1B;;AACA,QAAKA,IAAI,CAAEK,MAAM,CAACC,QAAT,CAAT,EAA+B;AAC9B;AACA,UAAI;AAAA,mDACcN,IADd;AAAA;;AAAA;AACH,8DAAwB;AAAA,gBAAZO,CAAY;AACvBV,YAAAA,KAAK,CAACW,IAAN,CAAYD,CAAZ,EADuB,CAGvB;AACA;AACA;AACA;AAPE;AAAA;AAAA;AAAA;AAAA;AAQH,OARD,CAQE,OAAQE,GAAR,EAAc,CACf;AACA;AACA;AACA;AACD,KAfD,MAeO;AACN,WAAM,IAAMC,GAAZ,IAAmBV,IAAnB,EAA0B;AACzB;AACA;AACA;AACA,YAAKU,GAAG,KAAK,cAAb,EAA8B;AAC7B;AACA;;AAEDb,QAAAA,KAAK,CAACW,IAAN,CAAYR,IAAI,CAAEU,GAAF,CAAhB,EARyB,CAUzB;AACA;AACA;AACA;AACD;AACD,GAjD0E,CAmD3E;;;AAEA,SAAOZ,QAAP;AACA;;AAED,SAASK,mBAAT,CAA8BH,IAA9B,EAAqC;AACpC,MAAMW,IAAI,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAAgCf,IAAhC,CAAb;AACA,MAAMgB,UAAU,GAAG,OAAOhB,IAA1B;AAEA,SACCgB,UAAU,KAAK,QAAf,IACAA,UAAU,KAAK,SADf,IAEAA,UAAU,KAAK,QAFf,IAGAA,UAAU,KAAK,QAHf,IAIAA,UAAU,KAAK,UAJf,IAKAL,IAAI,KAAK,eALT,IAMAA,IAAI,KAAK,iBANT,IAOAA,IAAI,KAAK,iBAPT,IASAX,IAAI,KAAKiB,SATT,IAUAjB,IAAI,KAAK,IAVT,IAYA;AACAA,EAAAA,IAAI,YAAYkB,WAbhB,IAcAlB,IAAI,YAAYmB,KAfjB;AAiBA","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/getsubnodes\n */\n\n/* globals EventTarget, Event */\n\nexport default function getSubNodes( head, excludedProperties = new Set() ) {\n\tconst nodes = [ head ];\n\n\t// @if CK_DEBUG_WATCHDOG // const prevNodeMap = new Map();\n\n\t// Nodes are stored to prevent infinite looping.\n\tconst subNodes = new Set();\n\n\twhile ( nodes.length > 0 ) {\n\t\tconst node = nodes.shift();\n\n\t\tif ( subNodes.has( node ) || shouldNodeBeSkipped( node ) || excludedProperties.has( node ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tsubNodes.add( node );\n\n\t\t// Handle arrays, maps, sets, custom collections that implements `[ Symbol.iterator ]()`, etc.\n\t\tif ( node[ Symbol.iterator ] ) {\n\t\t\t// The custom editor iterators might cause some problems if the editor is crashed.\n\t\t\ttry {\n\t\t\t\tfor ( const n of node ) {\n\t\t\t\t\tnodes.push( n );\n\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( n ) ) {\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( n, node );\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t\t}\n\t\t\t} catch ( err ) {\n\t\t\t\t// Do not log errors for broken structures\n\t\t\t\t// since we are in the error handling process already.\n\t\t\t\t// eslint-disable-line no-empty\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( const key in node ) {\n\t\t\t\t// We share a reference via the protobuf library within the editors,\n\t\t\t\t// hence the shared value should be skipped. Although, it's not a perfect\n\t\t\t\t// solution since new places like that might occur in the future.\n\t\t\t\tif ( key === 'defaultValue' ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tnodes.push( node[ key ] );\n\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( node[ key ] ) ) {\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( node[ key ], node );\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t}\n\t\t}\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return { subNodes, prevNodeMap };\n\n\treturn subNodes;\n}\n\nfunction shouldNodeBeSkipped( node ) {\n\tconst type = Object.prototype.toString.call( node );\n\tconst typeOfNode = typeof node;\n\n\treturn (\n\t\ttypeOfNode === 'number' ||\n\t\ttypeOfNode === 'boolean' ||\n\t\ttypeOfNode === 'string' ||\n\t\ttypeOfNode === 'symbol' ||\n\t\ttypeOfNode === 'function' ||\n\t\ttype === '[object Date]' ||\n\t\ttype === '[object RegExp]' ||\n\t\ttype === '[object Module]' ||\n\n\t\tnode === undefined ||\n\t\tnode === null ||\n\n\t\t// Skip native DOM objects, e.g. Window, nodes, events, etc.\n\t\tnode instanceof EventTarget ||\n\t\tnode instanceof Event\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}