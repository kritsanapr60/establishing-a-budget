{"ast":null,"code":"\"use strict\";\n/**\n* @author Jirachai Chansivanon <antronic.inc@gmail.com>\n* @see {@link https://github.com/antronic/that-baht-text-js|GitHub}\n*/\n// options\n\nvar MAX_POSITION = 6;\nvar UNIT_POSITION = 0;\nvar TEN_POSITION = 1;\nvar PRIMARY_UNIT = \"\\u0E1A\\u0E32\\u0E17\";\nvar SECONDARY_UNIT = \"\\u0E2A\\u0E15\\u0E32\\u0E07\\u0E04\\u0E4C\";\nvar WHOLE_NUMBER_TEXT = \"\\u0E16\\u0E49\\u0E27\\u0E19\";\nvar NUMBER_TEXTS = \"\\u0E28\\u0E39\\u0E19\\u0E22\\u0E4C,\\u0E2B\\u0E19\\u0E36\\u0E48\\u0E07,\\u0E2A\\u0E2D\\u0E07,\\u0E2A\\u0E32\\u0E21,\\u0E2A\\u0E35\\u0E48,\\u0E2B\\u0E49\\u0E32,\\u0E2B\\u0E01,\\u0E40\\u0E08\\u0E47\\u0E14,\\u0E41\\u0E1B\\u0E14,\\u0E40\\u0E01\\u0E49\\u0E32,\\u0E2A\\u0E34\\u0E1A\".split(\",\");\nvar UNIT_TEXTS = \"\\u0E2A\\u0E34\\u0E1A,\\u0E23\\u0E49\\u0E2D\\u0E22,\\u0E1E\\u0E31\\u0E19,\\u0E2B\\u0E21\\u0E37\\u0E48\\u0E19,\\u0E41\\u0E2A\\u0E19,\\u0E25\\u0E49\\u0E32\\u0E19\".split(\",\");\n\nvar getIntegerDigits = function getIntegerDigits(numberInput) {\n  return parseInt(numberInput.split(\".\")[0], 10).toString();\n};\n\nvar getFractionalDigits = function getFractionalDigits(numberInput) {\n  return parseInt(numberInput.split(\".\")[1], 10).toString();\n};\n\nvar hasFractionalDigits = function hasFractionalDigits(numberInput) {\n  return numberInput !== undefined && numberInput != \"0\";\n};\n\nvar isZeroValue = function isZeroValue(number) {\n  return number == 0;\n};\n\nvar isUnitPosition = function isUnitPosition(position) {\n  return position == UNIT_POSITION;\n};\n\nvar isTenPosition = function isTenPosition(position) {\n  return position % MAX_POSITION == TEN_POSITION;\n};\n\nvar isMillionsPosition = function isMillionsPosition(position) {\n  return position >= MAX_POSITION && position % MAX_POSITION == 0;\n};\n\nvar isLastPosition = function isLastPosition(position, lengthOfDigits) {\n  return position + 1 < lengthOfDigits;\n};\n\nvar reverseNumber = function reverseNumber(number) {\n  var numberStr = number.toString();\n  return numberStr.split(\"\").reverse().join(\"\");\n};\n\nvar getBathUnit = function getBathUnit(position, number) {\n  var unitText = \"\";\n\n  if (!isUnitPosition(position)) {\n    unitText = UNIT_TEXTS[Math.abs(position - 1) % MAX_POSITION];\n  }\n\n  if (isZeroValue(number) && !isMillionsPosition(position)) {\n    unitText = \"\";\n  }\n\n  return unitText;\n};\n\nvar getBathText = function getBathText(position, number, lengthOfDigits) {\n  var numberText = NUMBER_TEXTS[number];\n\n  if (isZeroValue(number)) {\n    return \"\";\n  }\n\n  if (isTenPosition(position) && number == 1) {\n    numberText = \"\";\n  }\n\n  if (isTenPosition(position) && number == 2) {\n    numberText = \"\\u0E22\\u0E35\\u0E48\";\n  }\n\n  if (isMillionsPosition(position) && isLastPosition(position, lengthOfDigits) && number == 1) {\n    numberText = \"\\u0E40\\u0E2D\\u0E47\\u0E14\";\n  }\n\n  if (lengthOfDigits == 2 && isLastPosition(position, lengthOfDigits) && number == 1) {\n    numberText = \"\\u0E40\\u0E2D\\u0E47\\u0E14\";\n  }\n\n  if (lengthOfDigits > 1 && isUnitPosition(position) && number == 1) {\n    numberText = \"\\u0E40\\u0E2D\\u0E47\\u0E14\";\n  }\n\n  return numberText;\n}; // convert function without async\n\n\nvar convert = function convert(numberInput) {\n  var numberReverse = reverseNumber(numberInput);\n  var textOutput = \"\"; // console.log('>', numberReverse.split(''))\n\n  numberReverse.split(\"\").forEach(function (number, i) {\n    textOutput = \"\".concat(getBathText(i, number, numberReverse.length)).concat(getBathUnit(i, number)).concat(textOutput);\n  });\n  return textOutput;\n};\n\nvar parseFloatWithPrecision = function parseFloatWithPrecision(number) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var numberFloatStr = parseFloat(number).toString().split(\".\");\n  var integerUnitStr = numberFloatStr[0];\n  var fractionalUnitStr = numberFloatStr.length == 2 ? numberFloatStr[1].substring(0, precision) : \"00\";\n  return parseFloat(\"\".concat(integerUnitStr, \".\").concat(fractionalUnitStr)).toFixed(precision);\n};\n\nvar convertFullMoney = function convertFullMoney(numberInput) {\n  var numberStr = parseFloatWithPrecision(numberInput);\n  var integerDigits = getIntegerDigits(numberStr);\n  var fractionalDigits = getFractionalDigits(numberStr);\n  var intTextOutput = convert(integerDigits);\n  var textOutput = [];\n\n  if (intTextOutput) {\n    textOutput.push(\"\".concat([intTextOutput, PRIMARY_UNIT].join(\"\")));\n  }\n\n  if (intTextOutput && !hasFractionalDigits(fractionalDigits)) {\n    textOutput.push(WHOLE_NUMBER_TEXT);\n  }\n\n  if (hasFractionalDigits(fractionalDigits) && convert(fractionalDigits)) {\n    textOutput.push(\"\".concat([convert(fractionalDigits), SECONDARY_UNIT].join(\"\")));\n  }\n\n  return textOutput.join(\"\");\n};\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n  module.exports = convertFullMoney;\n  exports[\"default\"] = convertFullMoney;\n  exports.THBText = convertFullMoney;\n} else {\n  window.THBText = convertFullMoney;\n}","map":{"version":3,"sources":["/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/thai-baht-text/thai-baht-text.js"],"names":["MAX_POSITION","UNIT_POSITION","TEN_POSITION","PRIMARY_UNIT","SECONDARY_UNIT","WHOLE_NUMBER_TEXT","NUMBER_TEXTS","split","UNIT_TEXTS","getIntegerDigits","numberInput","parseInt","toString","getFractionalDigits","hasFractionalDigits","undefined","isZeroValue","number","isUnitPosition","position","isTenPosition","isMillionsPosition","isLastPosition","lengthOfDigits","reverseNumber","numberStr","reverse","join","getBathUnit","unitText","Math","abs","getBathText","numberText","convert","numberReverse","textOutput","forEach","i","concat","length","parseFloatWithPrecision","precision","arguments","numberFloatStr","parseFloat","integerUnitStr","fractionalUnitStr","substring","toFixed","convertFullMoney","integerDigits","fractionalDigits","intTextOutput","push","module","exports","THBText","window"],"mappings":"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","sourcesContent":["\"use strict\";/**\n * @author Jirachai Chansivanon <antronic.inc@gmail.com>\n * @see {@link https://github.com/antronic/that-baht-text-js|GitHub}\n */ // options\nvar MAX_POSITION=6;var UNIT_POSITION=0;var TEN_POSITION=1;var PRIMARY_UNIT=\"\\u0E1A\\u0E32\\u0E17\";var SECONDARY_UNIT=\"\\u0E2A\\u0E15\\u0E32\\u0E07\\u0E04\\u0E4C\";var WHOLE_NUMBER_TEXT=\"\\u0E16\\u0E49\\u0E27\\u0E19\";var NUMBER_TEXTS=\"\\u0E28\\u0E39\\u0E19\\u0E22\\u0E4C,\\u0E2B\\u0E19\\u0E36\\u0E48\\u0E07,\\u0E2A\\u0E2D\\u0E07,\\u0E2A\\u0E32\\u0E21,\\u0E2A\\u0E35\\u0E48,\\u0E2B\\u0E49\\u0E32,\\u0E2B\\u0E01,\\u0E40\\u0E08\\u0E47\\u0E14,\\u0E41\\u0E1B\\u0E14,\\u0E40\\u0E01\\u0E49\\u0E32,\\u0E2A\\u0E34\\u0E1A\".split(\",\");var UNIT_TEXTS=\"\\u0E2A\\u0E34\\u0E1A,\\u0E23\\u0E49\\u0E2D\\u0E22,\\u0E1E\\u0E31\\u0E19,\\u0E2B\\u0E21\\u0E37\\u0E48\\u0E19,\\u0E41\\u0E2A\\u0E19,\\u0E25\\u0E49\\u0E32\\u0E19\".split(\",\");var getIntegerDigits=function getIntegerDigits(numberInput){return parseInt(numberInput.split(\".\")[0],10).toString()};var getFractionalDigits=function getFractionalDigits(numberInput){return parseInt(numberInput.split(\".\")[1],10).toString()};var hasFractionalDigits=function hasFractionalDigits(numberInput){return numberInput!==undefined&&numberInput!=\"0\"};var isZeroValue=function isZeroValue(number){return number==0};var isUnitPosition=function isUnitPosition(position){return position==UNIT_POSITION};var isTenPosition=function isTenPosition(position){return position%MAX_POSITION==TEN_POSITION};var isMillionsPosition=function isMillionsPosition(position){return position>=MAX_POSITION&&position%MAX_POSITION==0};var isLastPosition=function isLastPosition(position,lengthOfDigits){return position+1<lengthOfDigits};var reverseNumber=function reverseNumber(number){var numberStr=number.toString();return numberStr.split(\"\").reverse().join(\"\")};var getBathUnit=function getBathUnit(position,number){var unitText=\"\";if(!isUnitPosition(position)){unitText=UNIT_TEXTS[Math.abs(position-1)%MAX_POSITION]}if(isZeroValue(number)&&!isMillionsPosition(position)){unitText=\"\"}return unitText};var getBathText=function getBathText(position,number,lengthOfDigits){var numberText=NUMBER_TEXTS[number];if(isZeroValue(number)){return\"\"}if(isTenPosition(position)&&number==1){numberText=\"\"}if(isTenPosition(position)&&number==2){numberText=\"\\u0E22\\u0E35\\u0E48\"}if(isMillionsPosition(position)&&isLastPosition(position,lengthOfDigits)&&number==1){numberText=\"\\u0E40\\u0E2D\\u0E47\\u0E14\"}if(lengthOfDigits==2&&isLastPosition(position,lengthOfDigits)&&number==1){numberText=\"\\u0E40\\u0E2D\\u0E47\\u0E14\"}if(lengthOfDigits>1&&isUnitPosition(position)&&number==1){numberText=\"\\u0E40\\u0E2D\\u0E47\\u0E14\"}return numberText};// convert function without async\nvar convert=function convert(numberInput){var numberReverse=reverseNumber(numberInput);var textOutput=\"\";// console.log('>', numberReverse.split(''))\nnumberReverse.split(\"\").forEach(function(number,i){textOutput=\"\".concat(getBathText(i,number,numberReverse.length)).concat(getBathUnit(i,number)).concat(textOutput)});return textOutput};var parseFloatWithPrecision=function parseFloatWithPrecision(number){var precision=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;var numberFloatStr=parseFloat(number).toString().split(\".\");var integerUnitStr=numberFloatStr[0];var fractionalUnitStr=numberFloatStr.length==2?numberFloatStr[1].substring(0,precision):\"00\";return parseFloat(\"\".concat(integerUnitStr,\".\").concat(fractionalUnitStr)).toFixed(precision)};var convertFullMoney=function convertFullMoney(numberInput){var numberStr=parseFloatWithPrecision(numberInput);var integerDigits=getIntegerDigits(numberStr);var fractionalDigits=getFractionalDigits(numberStr);var intTextOutput=convert(integerDigits);var textOutput=[];if(intTextOutput){textOutput.push(\"\".concat([intTextOutput,PRIMARY_UNIT].join(\"\")))}if(intTextOutput&&!hasFractionalDigits(fractionalDigits)){textOutput.push(WHOLE_NUMBER_TEXT)}if(hasFractionalDigits(fractionalDigits)&&convert(fractionalDigits)){textOutput.push(\"\".concat([convert(fractionalDigits),SECONDARY_UNIT].join(\"\")))}return textOutput.join(\"\")};if(typeof module!==\"undefined\"&&typeof module.exports!==\"undefined\"){module.exports=convertFullMoney;exports[\"default\"]=convertFullMoney;exports.THBText=convertFullMoney}else{window.THBText=convertFullMoney}\n"]},"metadata":{},"sourceType":"script"}