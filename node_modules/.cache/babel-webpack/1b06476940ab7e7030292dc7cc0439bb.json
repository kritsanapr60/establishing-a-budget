{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/getsubnodes\n */\n\n/* globals EventTarget, Event */\nexport default function getSubNodes(head) {\n  var excludedProperties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n  var nodes = [head]; // @if CK_DEBUG_WATCHDOG // const prevNodeMap = new Map();\n  // Nodes are stored to prevent infinite looping.\n\n  var subNodes = new Set();\n\n  while (nodes.length > 0) {\n    var node = nodes.shift();\n\n    if (subNodes.has(node) || shouldNodeBeSkipped(node) || excludedProperties.has(node)) {\n      continue;\n    }\n\n    subNodes.add(node); // Handle arrays, maps, sets, custom collections that implements `[ Symbol.iterator ]()`, etc.\n\n    if (node[Symbol.iterator]) {\n      // The custom editor iterators might cause some problems if the editor is crashed.\n      try {\n        var _iterator = _createForOfIteratorHelper(node),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var n = _step.value;\n            nodes.push(n); // @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( n ) ) {\n            // @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( n, node );\n            // @if CK_DEBUG_WATCHDOG // }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } catch (err) {// Do not log errors for broken structures\n        // since we are in the error handling process already.\n        // eslint-disable-line no-empty\n      }\n    } else {\n      for (var key in node) {\n        // We share a reference via the protobuf library within the editors,\n        // hence the shared value should be skipped. Although, it's not a perfect\n        // solution since new places like that might occur in the future.\n        if (key === 'defaultValue') {\n          continue;\n        }\n\n        nodes.push(node[key]); // @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( node[ key ] ) ) {\n        // @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( node[ key ], node );\n        // @if CK_DEBUG_WATCHDOG // }\n      }\n    }\n  } // @if CK_DEBUG_WATCHDOG // return { subNodes, prevNodeMap };\n\n\n  return subNodes;\n}\n\nfunction shouldNodeBeSkipped(node) {\n  var type = Object.prototype.toString.call(node);\n  var typeOfNode = typeof node;\n  return typeOfNode === 'number' || typeOfNode === 'boolean' || typeOfNode === 'string' || typeOfNode === 'symbol' || typeOfNode === 'function' || type === '[object Date]' || type === '[object RegExp]' || type === '[object Module]' || node === undefined || node === null || // Skip native DOM objects, e.g. Window, nodes, events, etc.\n  node instanceof EventTarget || node instanceof Event;\n}","map":null,"metadata":{},"sourceType":"module"}