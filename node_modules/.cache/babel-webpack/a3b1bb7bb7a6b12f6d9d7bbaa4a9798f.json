{"ast":null,"code":"\"use strict\";\n/**\n* @author Jirachai Chansivanon <antronic.inc@gmail.com>\n* @see {@link https://github.com/antronic/that-baht-text-js|GitHub}\n*/\n// options\n\nvar MAX_POSITION = 6;\nvar UNIT_POSITION = 0;\nvar TEN_POSITION = 1;\nvar PRIMARY_UNIT = \"\\u0E1A\\u0E32\\u0E17\";\nvar SECONDARY_UNIT = \"\\u0E2A\\u0E15\\u0E32\\u0E07\\u0E04\\u0E4C\";\nvar WHOLE_NUMBER_TEXT = \"\\u0E16\\u0E49\\u0E27\\u0E19\";\nvar NUMBER_TEXTS = \"\\u0E28\\u0E39\\u0E19\\u0E22\\u0E4C,\\u0E2B\\u0E19\\u0E36\\u0E48\\u0E07,\\u0E2A\\u0E2D\\u0E07,\\u0E2A\\u0E32\\u0E21,\\u0E2A\\u0E35\\u0E48,\\u0E2B\\u0E49\\u0E32,\\u0E2B\\u0E01,\\u0E40\\u0E08\\u0E47\\u0E14,\\u0E41\\u0E1B\\u0E14,\\u0E40\\u0E01\\u0E49\\u0E32,\\u0E2A\\u0E34\\u0E1A\".split(\",\");\nvar UNIT_TEXTS = \"\\u0E2A\\u0E34\\u0E1A,\\u0E23\\u0E49\\u0E2D\\u0E22,\\u0E1E\\u0E31\\u0E19,\\u0E2B\\u0E21\\u0E37\\u0E48\\u0E19,\\u0E41\\u0E2A\\u0E19,\\u0E25\\u0E49\\u0E32\\u0E19\".split(\",\");\n\nvar getIntegerDigits = function getIntegerDigits(numberInput) {\n  return parseInt(numberInput.split(\".\")[0], 10).toString();\n};\n\nvar getFractionalDigits = function getFractionalDigits(numberInput) {\n  return parseInt(numberInput.split(\".\")[1], 10).toString();\n};\n\nvar hasFractionalDigits = function hasFractionalDigits(numberInput) {\n  return numberInput !== undefined && numberInput != \"0\";\n};\n\nvar isZeroValue = function isZeroValue(number) {\n  return number == 0;\n};\n\nvar isUnitPosition = function isUnitPosition(position) {\n  return position == UNIT_POSITION;\n};\n\nvar isTenPosition = function isTenPosition(position) {\n  return position % MAX_POSITION == TEN_POSITION;\n};\n\nvar isMillionsPosition = function isMillionsPosition(position) {\n  return position >= MAX_POSITION && position % MAX_POSITION == 0;\n};\n\nvar isLastPosition = function isLastPosition(position, lengthOfDigits) {\n  return position + 1 < lengthOfDigits;\n};\n\nvar reverseNumber = function reverseNumber(number) {\n  var numberStr = number.toString();\n  return numberStr.split(\"\").reverse().join(\"\");\n};\n\nvar getBathUnit = function getBathUnit(position, number) {\n  var unitText = \"\";\n\n  if (!isUnitPosition(position)) {\n    unitText = UNIT_TEXTS[Math.abs(position - 1) % MAX_POSITION];\n  }\n\n  if (isZeroValue(number) && !isMillionsPosition(position)) {\n    unitText = \"\";\n  }\n\n  return unitText;\n};\n\nvar getBathText = function getBathText(position, number, lengthOfDigits) {\n  var numberText = NUMBER_TEXTS[number];\n\n  if (isZeroValue(number)) {\n    return \"\";\n  }\n\n  if (isTenPosition(position) && number == 1) {\n    numberText = \"\";\n  }\n\n  if (isTenPosition(position) && number == 2) {\n    numberText = \"\\u0E22\\u0E35\\u0E48\";\n  }\n\n  if (isMillionsPosition(position) && isLastPosition(position, lengthOfDigits) && number == 1) {\n    numberText = \"\\u0E40\\u0E2D\\u0E47\\u0E14\";\n  }\n\n  if (lengthOfDigits == 2 && isLastPosition(position, lengthOfDigits) && number == 1) {\n    numberText = \"\\u0E40\\u0E2D\\u0E47\\u0E14\";\n  }\n\n  if (lengthOfDigits > 1 && isUnitPosition(position) && number == 1) {\n    numberText = \"\\u0E40\\u0E2D\\u0E47\\u0E14\";\n  }\n\n  return numberText;\n}; // convert function without async\n\n\nvar convert = function convert(numberInput) {\n  var numberReverse = reverseNumber(numberInput);\n  var textOutput = \"\"; // console.log('>', numberReverse.split(''))\n\n  numberReverse.split(\"\").forEach(function (number, i) {\n    textOutput = \"\".concat(getBathText(i, number, numberReverse.length)).concat(getBathUnit(i, number)).concat(textOutput);\n  });\n  return textOutput;\n};\n\nvar parseFloatWithPrecision = function parseFloatWithPrecision(number) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var numberFloatStr = parseFloat(number).toString().split(\".\");\n  var integerUnitStr = numberFloatStr[0];\n  var fractionalUnitStr = numberFloatStr.length == 2 ? numberFloatStr[1].substring(0, precision) : \"00\";\n  return parseFloat(\"\".concat(integerUnitStr, \".\").concat(fractionalUnitStr)).toFixed(precision);\n};\n\nvar convertFullMoney = function convertFullMoney(numberInput) {\n  var numberStr = parseFloatWithPrecision(numberInput);\n  var integerDigits = getIntegerDigits(numberStr);\n  var fractionalDigits = getFractionalDigits(numberStr);\n  var intTextOutput = convert(integerDigits);\n  var textOutput = [];\n\n  if (intTextOutput) {\n    textOutput.push(\"\".concat([intTextOutput, PRIMARY_UNIT].join(\"\")));\n  }\n\n  if (intTextOutput && !hasFractionalDigits(fractionalDigits)) {\n    textOutput.push(WHOLE_NUMBER_TEXT);\n  }\n\n  if (hasFractionalDigits(fractionalDigits) && convert(fractionalDigits)) {\n    textOutput.push(\"\".concat([convert(fractionalDigits), SECONDARY_UNIT].join(\"\")));\n  }\n\n  return textOutput.join(\"\");\n};\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n  module.exports = convertFullMoney;\n  exports[\"default\"] = convertFullMoney;\n  exports.THBText = convertFullMoney;\n} else {\n  window.THBText = convertFullMoney;\n}","map":null,"metadata":{},"sourceType":"script"}