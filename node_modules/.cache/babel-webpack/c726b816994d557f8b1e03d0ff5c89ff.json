{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/areconnectedthroughproperties\n */\n\n/* globals console */\nimport getSubNodes from './getsubnodes';\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n *\n * @param {Object|Array} target1\n * @param {Object|Array} target2\n */\n\nexport default function areConnectedThroughProperties(target1, target2) {\n  var excludedNodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n\n  if (target1 === target2 && isObject(target1)) {\n    return true;\n  } // @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n\n\n  var subNodes1 = getSubNodes(target1, excludedNodes);\n  var subNodes2 = getSubNodes(target2, excludedNodes);\n\n  var _iterator = _createForOfIteratorHelper(subNodes1),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n\n      if (subNodes2.has(node)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return false;\n}\n/* istanbul ignore next */\n// eslint-disable-next-line\n\nfunction checkConnectionBetweenProps(target1, target2, excludedNodes) {\n  var _getSubNodes = getSubNodes(target1, excludedNodes.subNodes),\n      subNodes1 = _getSubNodes.subNodes,\n      prevNodeMap1 = _getSubNodes.prevNodeMap;\n\n  var _getSubNodes2 = getSubNodes(target2, excludedNodes.subNodes),\n      subNodes2 = _getSubNodes2.subNodes,\n      prevNodeMap2 = _getSubNodes2.prevNodeMap;\n\n  var _iterator2 = _createForOfIteratorHelper(subNodes1),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var sharedNode = _step2.value;\n\n      if (subNodes2.has(sharedNode)) {\n        var connection = [];\n        connection.push(sharedNode);\n        var node = prevNodeMap1.get(sharedNode);\n\n        while (node && node !== target1) {\n          connection.push(node);\n          node = prevNodeMap1.get(node);\n        }\n\n        node = prevNodeMap2.get(sharedNode);\n\n        while (node && node !== target2) {\n          connection.unshift(node);\n          node = prevNodeMap2.get(node);\n        }\n\n        console.log('--------');\n        console.log({\n          target1: target1\n        });\n        console.log({\n          sharedNode: sharedNode\n        });\n        console.log({\n          target2: target2\n        });\n        console.log({\n          connection: connection\n        });\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return false;\n}\n\nfunction isObject(structure) {\n  return typeof structure === 'object' && structure !== null;\n}","map":{"version":3,"sources":["/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@ckeditor/ckeditor5-watchdog/src/utils/areconnectedthroughproperties.js"],"names":["getSubNodes","areConnectedThroughProperties","target1","target2","excludedNodes","Set","isObject","subNodes1","subNodes2","node","has","checkConnectionBetweenProps","subNodes","prevNodeMap1","prevNodeMap","prevNodeMap2","sharedNode","connection","push","get","unshift","console","log","structure"],"mappings":";;AAAA;;;;;AAKA;;;;AAIA;AAEA,OAAOA,WAAP,MAAwB,eAAxB;AAEA;;;;;;;AAMA,eAAe,SAASC,6BAAT,CAAwCC,OAAxC,EAAiDC,OAAjD,EAAsF;AAAA,MAA5BC,aAA4B,uEAAZ,IAAIC,GAAJ,EAAY;;AACpG,MAAKH,OAAO,KAAKC,OAAZ,IAAuBG,QAAQ,CAAEJ,OAAF,CAApC,EAAkD;AACjD,WAAO,IAAP;AACA,GAHmG,CAKpG;;;AAEA,MAAMK,SAAS,GAAGP,WAAW,CAAEE,OAAF,EAAWE,aAAX,CAA7B;AACA,MAAMI,SAAS,GAAGR,WAAW,CAAEG,OAAF,EAAWC,aAAX,CAA7B;;AARoG,6CAUhFG,SAVgF;AAAA;;AAAA;AAUpG,wDAAgC;AAAA,UAApBE,IAAoB;;AAC/B,UAAKD,SAAS,CAACE,GAAV,CAAeD,IAAf,CAAL,EAA6B;AAC5B,eAAO,IAAP;AACA;AACD;AAdmG;AAAA;AAAA;AAAA;AAAA;;AAgBpG,SAAO,KAAP;AACA;AAED;AACA;;AACA,SAASE,2BAAT,CAAsCT,OAAtC,EAA+CC,OAA/C,EAAwDC,aAAxD,EAAwE;AAAA,qBACZJ,WAAW,CAAEE,OAAF,EAAWE,aAAa,CAACQ,QAAzB,CADC;AAAA,MACrDL,SADqD,gBAC/DK,QAD+D;AAAA,MAC7BC,YAD6B,gBAC1CC,WAD0C;;AAAA,sBAEZd,WAAW,CAAEG,OAAF,EAAWC,aAAa,CAACQ,QAAzB,CAFC;AAAA,MAErDJ,SAFqD,iBAE/DI,QAF+D;AAAA,MAE7BG,YAF6B,iBAE1CD,WAF0C;;AAAA,8CAI7CP,SAJ6C;AAAA;;AAAA;AAIvE,2DAAsC;AAAA,UAA1BS,UAA0B;;AACrC,UAAKR,SAAS,CAACE,GAAV,CAAeM,UAAf,CAAL,EAAmC;AAClC,YAAMC,UAAU,GAAG,EAAnB;AAEAA,QAAAA,UAAU,CAACC,IAAX,CAAiBF,UAAjB;AAEA,YAAIP,IAAI,GAAGI,YAAY,CAACM,GAAb,CAAkBH,UAAlB,CAAX;;AAEA,eAAQP,IAAI,IAAIA,IAAI,KAAKP,OAAzB,EAAmC;AAClCe,UAAAA,UAAU,CAACC,IAAX,CAAiBT,IAAjB;AACAA,UAAAA,IAAI,GAAGI,YAAY,CAACM,GAAb,CAAkBV,IAAlB,CAAP;AACA;;AAEDA,QAAAA,IAAI,GAAGM,YAAY,CAACI,GAAb,CAAkBH,UAAlB,CAAP;;AAEA,eAAQP,IAAI,IAAIA,IAAI,KAAKN,OAAzB,EAAmC;AAClCc,UAAAA,UAAU,CAACG,OAAX,CAAoBX,IAApB;AACAA,UAAAA,IAAI,GAAGM,YAAY,CAACI,GAAb,CAAkBV,IAAlB,CAAP;AACA;;AAEDY,QAAAA,OAAO,CAACC,GAAR,CAAa,UAAb;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAa;AAAEpB,UAAAA,OAAO,EAAPA;AAAF,SAAb;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAa;AAAEN,UAAAA,UAAU,EAAVA;AAAF,SAAb;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAa;AAAEnB,UAAAA,OAAO,EAAPA;AAAF,SAAb;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAa;AAAEL,UAAAA,UAAU,EAAVA;AAAF,SAAb;AAEA,eAAO,IAAP;AACA;AACD;AAhCsE;AAAA;AAAA;AAAA;AAAA;;AAkCvE,SAAO,KAAP;AACA;;AAED,SAASX,QAAT,CAAmBiB,SAAnB,EAA+B;AAC9B,SAAO,OAAOA,SAAP,KAAqB,QAArB,IAAiCA,SAAS,KAAK,IAAtD;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/areconnectedthroughproperties\n */\n\n/* globals console */\n\nimport getSubNodes from './getsubnodes';\n\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n *\n * @param {Object|Array} target1\n * @param {Object|Array} target2\n */\nexport default function areConnectedThroughProperties( target1, target2, excludedNodes = new Set() ) {\n\tif ( target1 === target2 && isObject( target1 ) ) {\n\t\treturn true;\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n\n\tconst subNodes1 = getSubNodes( target1, excludedNodes );\n\tconst subNodes2 = getSubNodes( target2, excludedNodes );\n\n\tfor ( const node of subNodes1 ) {\n\t\tif ( subNodes2.has( node ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/* istanbul ignore next */\n// eslint-disable-next-line\nfunction checkConnectionBetweenProps( target1, target2, excludedNodes ) {\n\tconst { subNodes: subNodes1, prevNodeMap: prevNodeMap1 } = getSubNodes( target1, excludedNodes.subNodes );\n\tconst { subNodes: subNodes2, prevNodeMap: prevNodeMap2 } = getSubNodes( target2, excludedNodes.subNodes );\n\n\tfor ( const sharedNode of subNodes1 ) {\n\t\tif ( subNodes2.has( sharedNode ) ) {\n\t\t\tconst connection = [];\n\n\t\t\tconnection.push( sharedNode );\n\n\t\t\tlet node = prevNodeMap1.get( sharedNode );\n\n\t\t\twhile ( node && node !== target1 ) {\n\t\t\t\tconnection.push( node );\n\t\t\t\tnode = prevNodeMap1.get( node );\n\t\t\t}\n\n\t\t\tnode = prevNodeMap2.get( sharedNode );\n\n\t\t\twhile ( node && node !== target2 ) {\n\t\t\t\tconnection.unshift( node );\n\t\t\t\tnode = prevNodeMap2.get( node );\n\t\t\t}\n\n\t\t\tconsole.log( '--------' );\n\t\t\tconsole.log( { target1 } );\n\t\t\tconsole.log( { sharedNode } );\n\t\t\tconsole.log( { target2 } );\n\t\t\tconsole.log( { connection } );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction isObject( structure ) {\n\treturn typeof structure === 'object' && structure !== null;\n}\n"]},"metadata":{},"sourceType":"module"}