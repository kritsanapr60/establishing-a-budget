{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/editorwatchdog\n */\n\n/* globals console */\nimport { throttle, cloneDeepWith, isElement } from 'lodash-es';\nimport areConnectedThroughProperties from './utils/areconnectedthroughproperties';\nimport Watchdog from './watchdog';\n/**\n * A watchdog for CKEditor 5 editors.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n *\n * @extends {module:watchdog/watchdog~Watchdog}\n */\n\nvar EditorWatchdog = /*#__PURE__*/function (_Watchdog) {\n  _inherits(EditorWatchdog, _Watchdog);\n\n  var _super = _createSuper(EditorWatchdog);\n\n  /**\n   * @param {*} Editor The editor class.\n   * @param {module:watchdog/watchdog~WatchdogConfig} [watchdogConfig] The watchdog plugin configuration.\n   */\n  function EditorWatchdog(Editor) {\n    var _this;\n\n    var watchdogConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, EditorWatchdog);\n\n    _this = _super.call(this, watchdogConfig);\n    /**\n     * The current editor instance.\n     *\n     * @private\n     * @type {module:core/editor/editor~Editor}\n     */\n\n    _this._editor = null;\n    /**\n     * Throttled save method. The `save()` method is called the specified `saveInterval` after `throttledSave()` is called,\n     * unless a new action happens in the meantime.\n     *\n     * @private\n     * @type {Function}\n     */\n\n    _this._throttledSave = throttle(_this._save.bind(_assertThisInitialized(_this)), typeof watchdogConfig.saveInterval === 'number' ? watchdogConfig.saveInterval : 5000);\n    /**\n     * The latest saved editor data represented as a root name -> root data object.\n     *\n     * @private\n     * @member {Object.<String,String>} #_data\n     */\n\n    /**\n     * The last document version.\n     *\n     * @private\n     * @member {Number} #_lastDocumentVersion\n     */\n\n    /**\n     * The editor source element or data.\n     *\n     * @private\n     * @member {HTMLElement|String|Object.<String|String>} #_elementOrData\n     */\n\n    /**\n     * The editor configuration.\n     *\n     * @private\n     * @member {Object|undefined} #_config\n     */\n    // Set default creator and destructor functions:\n\n    _this._creator = function (elementOrData, config) {\n      return Editor.create(elementOrData, config);\n    };\n\n    _this._destructor = function (editor) {\n      return editor.destroy();\n    };\n\n    return _this;\n  }\n  /**\n   * The current editor instance.\n   *\n   * @readonly\n   * @type {module:core/editor/editor~Editor}\n   */\n\n\n  _createClass(EditorWatchdog, [{\n    key: \"_restart\",\n\n    /**\n     * Sets the function that is responsible for the editor creation.\n     * It expects a function that should return a promise.\n     *\n     *\t\twatchdog.setCreator( ( element, config ) => ClassicEditor.create( element, config ) );\n     *\n     * @method #setCreator\n     * @param {Function} creator\n     */\n\n    /**\n     * Sets the function that is responsible for the editor destruction.\n     * Overrides the default destruction function, which destroys only the editor instance.\n     * It expects a function that should return a promise or `undefined`.\n     *\n     *\t\twatchdog.setDestructor( editor => {\n     *\t\t\t// Do something before the editor is destroyed.\n     *\n     *\t\t\treturn editor\n     *\t\t\t\t.destroy()\n     *\t\t\t\t.then( () => {\n     *\t\t\t\t\t// Do something after the editor is destroyed.\n     *\t\t\t\t} );\n     *\t\t} );\n     *\n     * @method #setDestructor\n     * @param {Function} destructor\n     */\n\n    /**\n     * Restarts the editor instance. This method is called whenever an editor error occurs. It fires the `restart` event and changes\n     * the state to `initializing`.\n     *\n     * @protected\n     * @fires restart\n     * @returns {Promise}\n     */\n    value: function _restart() {\n      var _this2 = this;\n\n      return Promise.resolve().then(function () {\n        _this2.state = 'initializing';\n\n        _this2._fire('stateChange');\n\n        return _this2._destroy();\n      }).catch(function (err) {\n        console.error('An error happened during the editor destroying.', err);\n      }).then(function () {\n        if (typeof _this2._elementOrData === 'string') {\n          return _this2.create(_this2._data, _this2._config, _this2._config.context);\n        } else {\n          var updatedConfig = Object.assign({}, _this2._config, {\n            initialData: _this2._data\n          });\n          return _this2.create(_this2._elementOrData, updatedConfig, updatedConfig.context);\n        }\n      }).then(function () {\n        _this2._fire('restart');\n      });\n    }\n    /**\n     * Creates the editor instance and keeps it running, using the defined creator and destructor.\n     *\n     * @param {HTMLElement|String|Object.<String|String>} [elementOrData] The editor source element or the editor data.\n     * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n     * @param {Object} [context] A context for the editor.\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"create\",\n    value: function create() {\n      var _this3 = this;\n\n      var elementOrData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._elementOrData;\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._config;\n      var context = arguments.length > 2 ? arguments[2] : undefined;\n      return Promise.resolve().then(function () {\n        _get(_getPrototypeOf(EditorWatchdog.prototype), \"_startErrorHandling\", _this3).call(_this3);\n\n        _this3._elementOrData = elementOrData; // Clone configuration because it might be shared within multiple watchdog instances. Otherwise,\n        // when an error occurs in one of these editors, the watchdog will restart all of them.\n\n        _this3._config = _this3._cloneEditorConfiguration(config) || {};\n        _this3._config.context = context;\n        return _this3._creator(elementOrData, _this3._config);\n      }).then(function (editor) {\n        _this3._editor = editor;\n        editor.model.document.on('change:data', _this3._throttledSave);\n        _this3._lastDocumentVersion = editor.model.document.version;\n        _this3._data = _this3._getData();\n        _this3.state = 'ready';\n\n        _this3._fire('stateChange');\n      });\n    }\n    /**\n     * Destroys the watchdog and the current editor instance. It fires the callback\n     * registered in {@link #setDestructor `setDestructor()`} and uses it to destroy the editor instance.\n     * It also sets the state to `destroyed`.\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this4 = this;\n\n      return Promise.resolve().then(function () {\n        _this4.state = 'destroyed';\n\n        _this4._fire('stateChange');\n\n        _get(_getPrototypeOf(EditorWatchdog.prototype), \"destroy\", _this4).call(_this4);\n\n        return _this4._destroy();\n      });\n    }\n    /**\n     * @private\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var _this5 = this;\n\n      return Promise.resolve().then(function () {\n        _this5._stopErrorHandling(); // Save data if there is a remaining editor data change.\n\n\n        _this5._throttledSave.flush();\n\n        var editor = _this5._editor;\n        _this5._editor = null;\n        return _this5._destructor(editor);\n      });\n    }\n    /**\n     * Saves the editor data, so it can be restored after the crash even if the data cannot be fetched at\n     * the moment of the crash.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_save\",\n    value: function _save() {\n      var version = this._editor.model.document.version; // Operation may not result in a model change, so the document's version can be the same.\n\n      if (version === this._lastDocumentVersion) {\n        return;\n      }\n\n      try {\n        this._data = this._getData();\n        this._lastDocumentVersion = version;\n      } catch (err) {\n        console.error(err, 'An error happened during restoring editor data. ' + 'Editor will be restored from the previously saved data.');\n      }\n    }\n    /**\n     * @protected\n     * @param {Set} props\n     */\n\n  }, {\n    key: \"_setExcludedProperties\",\n    value: function _setExcludedProperties(props) {\n      this._excludedProps = props;\n    }\n    /**\n     * Returns the editor data.\n     *\n     * @private\n     * @returns {Object<String,String>}\n     */\n\n  }, {\n    key: \"_getData\",\n    value: function _getData() {\n      var data = {};\n\n      var _iterator = _createForOfIteratorHelper(this._editor.model.document.getRootNames()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var rootName = _step.value;\n          data[rootName] = this._editor.data.get({\n            rootName: rootName\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return data;\n    }\n    /**\n     * Traverses the error context and the current editor to find out whether these structures are connected\n     * to each other via properties.\n     *\n     * @protected\n     * @param {module:utils/ckeditorerror~CKEditorError} error\n     */\n\n  }, {\n    key: \"_isErrorComingFromThisItem\",\n    value: function _isErrorComingFromThisItem(error) {\n      return areConnectedThroughProperties(this._editor, error.context, this._excludedProps);\n    }\n    /**\n     * Clones the editor configuration.\n     *\n     * @private\n     * @param {Object} config\n     */\n\n  }, {\n    key: \"_cloneEditorConfiguration\",\n    value: function _cloneEditorConfiguration(config) {\n      return cloneDeepWith(config, function (value, key) {\n        // Leave DOM references.\n        if (isElement(value)) {\n          return value;\n        }\n\n        if (key === 'context') {\n          return value;\n        }\n      });\n    }\n    /**\n     * Fired after the watchdog restarts the error in case of a crash.\n     *\n     * @event restart\n     */\n\n  }, {\n    key: \"editor\",\n    get: function get() {\n      return this._editor;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_item\",\n    get: function get() {\n      return this._editor;\n    }\n  }]);\n\n  return EditorWatchdog;\n}(Watchdog);\n\nexport { EditorWatchdog as default };","map":{"version":3,"sources":["/Users/kritsanaprasit/Desktop/establishing-a-budget/establishing-a-budget/node_modules/@ckeditor/ckeditor5-watchdog/src/editorwatchdog.js"],"names":["throttle","cloneDeepWith","isElement","areConnectedThroughProperties","Watchdog","EditorWatchdog","Editor","watchdogConfig","_editor","_throttledSave","_save","bind","saveInterval","_creator","elementOrData","config","create","_destructor","editor","destroy","Promise","resolve","then","state","_fire","_destroy","catch","err","console","error","_elementOrData","_data","_config","context","updatedConfig","Object","assign","initialData","_cloneEditorConfiguration","model","document","on","_lastDocumentVersion","version","_getData","_stopErrorHandling","flush","props","_excludedProps","data","getRootNames","rootName","get","value","key"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/editorwatchdog\n */\n\n/* globals console */\n\nimport { throttle, cloneDeepWith, isElement } from 'lodash-es';\nimport areConnectedThroughProperties from './utils/areconnectedthroughproperties';\nimport Watchdog from './watchdog';\n\n/**\n * A watchdog for CKEditor 5 editors.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n *\n * @extends {module:watchdog/watchdog~Watchdog}\n */\nexport default class EditorWatchdog extends Watchdog {\n\t/**\n\t * @param {*} Editor The editor class.\n\t * @param {module:watchdog/watchdog~WatchdogConfig} [watchdogConfig] The watchdog plugin configuration.\n\t */\n\tconstructor( Editor, watchdogConfig = {} ) {\n\t\tsuper( watchdogConfig );\n\n\t\t/**\n\t\t * The current editor instance.\n\t\t *\n\t\t * @private\n\t\t * @type {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis._editor = null;\n\n\t\t/**\n\t\t * Throttled save method. The `save()` method is called the specified `saveInterval` after `throttledSave()` is called,\n\t\t * unless a new action happens in the meantime.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._throttledSave = throttle(\n\t\t\tthis._save.bind( this ),\n\t\t\ttypeof watchdogConfig.saveInterval === 'number' ? watchdogConfig.saveInterval : 5000\n\t\t);\n\n\t\t/**\n\t\t * The latest saved editor data represented as a root name -> root data object.\n\t\t *\n\t\t * @private\n\t\t * @member {Object.<String,String>} #_data\n\t\t */\n\n\t\t/**\n\t\t * The last document version.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_lastDocumentVersion\n\t\t */\n\n\t\t/**\n\t\t * The editor source element or data.\n\t\t *\n\t\t * @private\n\t\t * @member {HTMLElement|String|Object.<String|String>} #_elementOrData\n\t\t */\n\n\t\t/**\n\t\t * The editor configuration.\n\t\t *\n\t\t * @private\n\t\t * @member {Object|undefined} #_config\n\t\t */\n\n\t\t// Set default creator and destructor functions:\n\t\tthis._creator = ( ( elementOrData, config ) => Editor.create( elementOrData, config ) );\n\t\tthis._destructor = editor => editor.destroy();\n\t}\n\n\t/**\n\t * The current editor instance.\n\t *\n\t * @readonly\n\t * @type {module:core/editor/editor~Editor}\n\t */\n\tget editor() {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _item() {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * Sets the function that is responsible for the editor creation.\n\t * It expects a function that should return a promise.\n\t *\n\t *\t\twatchdog.setCreator( ( element, config ) => ClassicEditor.create( element, config ) );\n\t *\n\t * @method #setCreator\n\t * @param {Function} creator\n\t */\n\n\t/**\n\t * Sets the function that is responsible for the editor destruction.\n\t * Overrides the default destruction function, which destroys only the editor instance.\n\t * It expects a function that should return a promise or `undefined`.\n\t *\n\t *\t\twatchdog.setDestructor( editor => {\n\t *\t\t\t// Do something before the editor is destroyed.\n\t *\n\t *\t\t\treturn editor\n\t *\t\t\t\t.destroy()\n\t *\t\t\t\t.then( () => {\n\t *\t\t\t\t\t// Do something after the editor is destroyed.\n\t *\t\t\t\t} );\n\t *\t\t} );\n\t *\n\t * @method #setDestructor\n\t * @param {Function} destructor\n\t */\n\n\t/**\n\t * Restarts the editor instance. This method is called whenever an editor error occurs. It fires the `restart` event and changes\n\t * the state to `initializing`.\n\t *\n\t * @protected\n\t * @fires restart\n\t * @returns {Promise}\n\t */\n\t_restart() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'initializing';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\treturn this._destroy();\n\t\t\t} )\n\t\t\t.catch( err => {\n\t\t\t\tconsole.error( 'An error happened during the editor destroying.', err );\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tif ( typeof this._elementOrData === 'string' ) {\n\t\t\t\t\treturn this.create( this._data, this._config, this._config.context );\n\t\t\t\t} else {\n\t\t\t\t\tconst updatedConfig = Object.assign( {}, this._config, {\n\t\t\t\t\t\tinitialData: this._data\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn this.create( this._elementOrData, updatedConfig, updatedConfig.context );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tthis._fire( 'restart' );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates the editor instance and keeps it running, using the defined creator and destructor.\n\t *\n\t * @param {HTMLElement|String|Object.<String|String>} [elementOrData] The editor source element or the editor data.\n\t * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n\t * @param {Object} [context] A context for the editor.\n\t *\n\t * @returns {Promise}\n\t */\n\tcreate( elementOrData = this._elementOrData, config = this._config, context ) {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tsuper._startErrorHandling();\n\n\t\t\t\tthis._elementOrData = elementOrData;\n\n\t\t\t\t// Clone configuration because it might be shared within multiple watchdog instances. Otherwise,\n\t\t\t\t// when an error occurs in one of these editors, the watchdog will restart all of them.\n\t\t\t\tthis._config = this._cloneEditorConfiguration( config ) || {};\n\n\t\t\t\tthis._config.context = context;\n\n\t\t\t\treturn this._creator( elementOrData, this._config );\n\t\t\t} )\n\t\t\t.then( editor => {\n\t\t\t\tthis._editor = editor;\n\n\t\t\t\teditor.model.document.on( 'change:data', this._throttledSave );\n\n\t\t\t\tthis._lastDocumentVersion = editor.model.document.version;\n\t\t\t\tthis._data = this._getData();\n\n\t\t\t\tthis.state = 'ready';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the watchdog and the current editor instance. It fires the callback\n\t * registered in {@link #setDestructor `setDestructor()`} and uses it to destroy the editor instance.\n\t * It also sets the state to `destroyed`.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'destroyed';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\tsuper.destroy();\n\n\t\t\t\treturn this._destroy();\n\t\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t * @returns {Promise}\n\t */\n\t_destroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis._stopErrorHandling();\n\n\t\t\t\t// Save data if there is a remaining editor data change.\n\t\t\t\tthis._throttledSave.flush();\n\n\t\t\t\tconst editor = this._editor;\n\n\t\t\t\tthis._editor = null;\n\n\t\t\t\treturn this._destructor( editor );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Saves the editor data, so it can be restored after the crash even if the data cannot be fetched at\n\t * the moment of the crash.\n\t *\n\t * @private\n\t */\n\t_save() {\n\t\tconst version = this._editor.model.document.version;\n\n\t\t// Operation may not result in a model change, so the document's version can be the same.\n\t\tif ( version === this._lastDocumentVersion ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis._data = this._getData();\n\t\t\tthis._lastDocumentVersion = version;\n\t\t} catch ( err ) {\n\t\t\tconsole.error(\n\t\t\t\terr,\n\t\t\t\t'An error happened during restoring editor data. ' +\n\t\t\t\t'Editor will be restored from the previously saved data.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Set} props\n\t */\n\t_setExcludedProperties( props ) {\n\t\tthis._excludedProps = props;\n\t}\n\n\t/**\n\t * Returns the editor data.\n\t *\n\t * @private\n\t * @returns {Object<String,String>}\n\t */\n\t_getData() {\n\t\tconst data = {};\n\n\t\tfor ( const rootName of this._editor.model.document.getRootNames() ) {\n\t\t\tdata[ rootName ] = this._editor.data.get( { rootName } );\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * Traverses the error context and the current editor to find out whether these structures are connected\n\t * to each other via properties.\n\t *\n\t * @protected\n\t * @param {module:utils/ckeditorerror~CKEditorError} error\n\t */\n\t_isErrorComingFromThisItem( error ) {\n\t\treturn areConnectedThroughProperties( this._editor, error.context, this._excludedProps );\n\t}\n\n\t/**\n\t * Clones the editor configuration.\n\t *\n\t * @private\n\t * @param {Object} config\n\t */\n\t_cloneEditorConfiguration( config ) {\n\t\treturn cloneDeepWith( config, ( value, key ) => {\n\t\t\t// Leave DOM references.\n\t\t\tif ( isElement( value ) ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif ( key === 'context' ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Fired after the watchdog restarts the error in case of a crash.\n\t *\n\t * @event restart\n\t */\n}\n"]},"metadata":{},"sourceType":"module"}